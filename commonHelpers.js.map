{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\n\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nlet userSelectedDate = '';\nconst btn = document.querySelector('[data-start]');\nconst dataDays = document.querySelector('[data-days]');\nconst dataHours = document.querySelector('[data-hours]');\nconst dataMinutes = document.querySelector('[data-minutes]');\nconst dataSeconds = document.querySelector('[data-seconds]');\n\nbtn.setAttribute('disabled', 'disabled');\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    userSelectedDate = selectedDates[0];\n\n    if (userSelectedDate.getTime() > Date.now()) {\n      btn.removeAttribute('disabled');\n    } else {\n      iziToast.error({\n        title: 'Error',\n        message: 'Please choose a date in the future',\n        position: 'topCenter',\n      });\n\n      dataDays.textContent = '00';\n      dataHours.textContent = '00';\n      dataMinutes.textContent = '00';\n      dataSeconds.textContent = '00';\n    }\n  },\n};\nflatpickr('#datetime-picker', options);\n\nconst handleButtonClick = () => {\n  btn.setAttribute('disabled', 'disabled');\n\n  const dateInterval = setInterval(() => {\n    const resultDate = userSelectedDate.getTime() - Date.now();\n    if (resultDate <= 0) {\n      clearInterval(dateInterval);\n      return (userSelectedDate = '');\n    }\n\n    const currentDate = convertMs(resultDate);\n    dataDays.textContent = addLeadingZero(currentDate.days);\n    dataHours.textContent = addLeadingZero(currentDate.hours);\n    dataMinutes.textContent = addLeadingZero(currentDate.minutes);\n    dataSeconds.textContent = addLeadingZero(currentDate.seconds);\n  }, 1000);\n};\n\nbtn.addEventListener('click', handleButtonClick);\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(value) {\n  return value < 10 ? String(value).padStart(2, '0') : value;\n}\n"],"names":["userSelectedDate","btn","dataDays","dataHours","dataMinutes","dataSeconds","options","selectedDates","iziToast","flatpickr","handleButtonClick","dateInterval","resultDate","currentDate","convertMs","addLeadingZero","ms","days","hours","minutes","seconds","value"],"mappings":"+IAMA,IAAIA,EAAmB,GACvB,MAAMC,EAAM,SAAS,cAAc,cAAc,EAC3CC,EAAW,SAAS,cAAc,aAAa,EAC/CC,EAAY,SAAS,cAAc,cAAc,EACjDC,EAAc,SAAS,cAAc,gBAAgB,EACrDC,EAAc,SAAS,cAAc,gBAAgB,EAE3DJ,EAAI,aAAa,WAAY,UAAU,EAEvC,MAAMK,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrBP,EAAmBO,EAAc,GAE7BP,EAAiB,QAAO,EAAK,KAAK,IAAG,EACvCC,EAAI,gBAAgB,UAAU,GAE9BO,EAAS,MAAM,CACb,MAAO,QACP,QAAS,qCACT,SAAU,WAClB,CAAO,EAEDN,EAAS,YAAc,KACvBC,EAAU,YAAc,KACxBC,EAAY,YAAc,KAC1BC,EAAY,YAAc,KAE7B,CACH,EACAI,EAAU,mBAAoBH,CAAO,EAErC,MAAMI,EAAoB,IAAM,CAC9BT,EAAI,aAAa,WAAY,UAAU,EAEvC,MAAMU,EAAe,YAAY,IAAM,CACrC,MAAMC,EAAaZ,EAAiB,QAAS,EAAG,KAAK,IAAG,EACxD,GAAIY,GAAc,EAChB,qBAAcD,CAAY,EAClBX,EAAmB,GAG7B,MAAMa,EAAcC,EAAUF,CAAU,EACxCV,EAAS,YAAca,EAAeF,EAAY,IAAI,EACtDV,EAAU,YAAcY,EAAeF,EAAY,KAAK,EACxDT,EAAY,YAAcW,EAAeF,EAAY,OAAO,EAC5DR,EAAY,YAAcU,EAAeF,EAAY,OAAO,CAC7D,EAAE,GAAI,CACT,EAEAZ,EAAI,iBAAiB,QAASS,CAAiB,EAE/C,SAASI,EAAUE,EAAI,CAMrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASL,EAAeM,EAAO,CAC7B,OAAOA,EAAQ,GAAK,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,EAAIA,CACvD"}